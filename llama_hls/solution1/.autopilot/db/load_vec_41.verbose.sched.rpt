

================================================================
== Vitis HLS Report for 'load_vec_41'
================================================================
* Date:           Mon Sep 15 01:27:55 2025

* Version:        2025.1 (Build 6135595 on May 21 2025)
* Project:        llama_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: versalhbm
* Target device:  xcv80-lsva4737-2MHP-e-S


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  4.00 ns|  2.665 ns|     1.08 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |      770|      770|  3.080 us|  3.080 us|  769|  769|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- mem_rd  |      768|      768|         2|          1|          1|   768|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.42>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [kernel_matmul.cpp:9]   --->   Operation 5 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%specstablecontent_ln0 = specstablecontent void @_ssdm_op_SpecStableContent, i32 %i_vec_3, i1 1, void @p_str"   --->   Operation 6 'specstablecontent' 'specstablecontent_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%specstablecontent_ln0 = specstablecontent void @_ssdm_op_SpecStableContent, i32 %i_vec_2, i1 1, void @p_str"   --->   Operation 7 'specstablecontent' 'specstablecontent_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%specstablecontent_ln0 = specstablecontent void @_ssdm_op_SpecStableContent, i32 %i_vec_1, i1 1, void @p_str"   --->   Operation 8 'specstablecontent' 'specstablecontent_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specstablecontent_ln0 = specstablecontent void @_ssdm_op_SpecStableContent, i32 %i_vec_0, i1 1, void @p_str"   --->   Operation 9 'specstablecontent' 'specstablecontent_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %vector_stream, void @empty_39, i32 0, i32 0, void @empty_48, i32 0, i32 0, void @empty_48, void @empty_48, void @empty_48, i32 0, i32 0, i32 0, i32 0, void @empty_48, void @empty_48, i32 4294967295, i32 0, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %vector_stream, void @empty_39, i32 0, i32 0, void @empty_48, i32 0, i32 0, void @empty_48, void @empty_48, void @empty_48, i32 0, i32 0, i32 0, i32 0, void @empty_48, void @empty_48, i32 4294967295, i32 0, i32 0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %vector_stream, void @empty_39, i32 0, i32 0, void @empty_48, i32 0, i32 0, void @empty_48, void @empty_48, void @empty_48, i32 0, i32 0, i32 0, i32 0, void @empty_48, void @empty_48, i32 4294967295, i32 0, i32 0"   --->   Operation 12 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %vector_stream, void @empty_39, i32 0, i32 0, void @empty_48, i32 0, i32 0, void @empty_48, void @empty_48, void @empty_48, i32 0, i32 0, i32 0, i32 0, void @empty_48, void @empty_48, i32 4294967295, i32 0, i32 0"   --->   Operation 13 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %vector_stream, void @empty_39, i32 0, i32 0, void @empty_48, i32 0, i32 0, void @empty_48, void @empty_48, void @empty_48, i32 0, i32 0, i32 0, i32 0, void @empty_48, void @empty_48, i32 4294967295, i32 0, i32 0"   --->   Operation 14 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %vector_stream, void @empty_39, i32 0, i32 0, void @empty_48, i32 0, i32 0, void @empty_48, void @empty_48, void @empty_48, i32 0, i32 0, i32 0, i32 0, void @empty_48, void @empty_48, i32 4294967295, i32 0, i32 0"   --->   Operation 15 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %vector_stream, void @empty_39, i32 0, i32 0, void @empty_48, i32 0, i32 0, void @empty_48, void @empty_48, void @empty_48, i32 0, i32 0, i32 0, i32 0, void @empty_48, void @empty_48, i32 4294967295, i32 0, i32 0"   --->   Operation 16 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %vector_stream, void @empty_39, i32 0, i32 0, void @empty_48, i32 0, i32 0, void @empty_48, void @empty_48, void @empty_48, i32 0, i32 0, i32 0, i32 0, void @empty_48, void @empty_48, i32 4294967295, i32 0, i32 0"   --->   Operation 17 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.39ns)   --->   "%store_ln9 = store i10 0, i10 %i" [kernel_matmul.cpp:9]   --->   Operation 18 'store' 'store_ln9' <Predicate = true> <Delay = 0.39>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln9 = br void %for.inc.i" [kernel_matmul.cpp:9]   --->   Operation 19 'br' 'br_ln9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%i_9 = load i10 %i" [kernel_matmul.cpp:9]   --->   Operation 20 'load' 'i_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.71ns)   --->   "%add_ln9 = add i10 %i_9, i10 1" [kernel_matmul.cpp:9]   --->   Operation 21 'add' 'add_ln9' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.60ns)   --->   "%icmp_ln9 = icmp_eq  i10 %i_9, i10 768" [kernel_matmul.cpp:9]   --->   Operation 22 'icmp' 'icmp_ln9' <Predicate = true> <Delay = 0.60> <CoreInst = "ICmp_EQ">   --->   Core 156 'ICmp_EQ' <Latency = 0> <II = 1> <Delay = 0.60> <FuncUnit> <Opcode : 'seteq' 'setne'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln9 = br i1 %icmp_ln9, void %for.inc.split.i, void %load_vec.41.exit" [kernel_matmul.cpp:9]   --->   Operation 23 'br' 'br_ln9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln9 = trunc i10 %i_9" [kernel_matmul.cpp:9]   --->   Operation 24 'trunc' 'trunc_ln9' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%lshr_ln9 = partselect i8 @_ssdm_op_PartSelect.i8.i10.i32.i32, i10 %i_9, i32 2, i32 9" [kernel_matmul.cpp:9]   --->   Operation 25 'partselect' 'lshr_ln9' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln9 = zext i8 %lshr_ln9" [kernel_matmul.cpp:9]   --->   Operation 26 'zext' 'zext_ln9' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%i_vec_0_addr = getelementptr i32 %i_vec_0, i64 0, i64 %zext_ln9" [kernel_matmul.cpp:12]   --->   Operation 27 'getelementptr' 'i_vec_0_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%i_vec_1_addr = getelementptr i32 %i_vec_1, i64 0, i64 %zext_ln9" [kernel_matmul.cpp:12]   --->   Operation 28 'getelementptr' 'i_vec_1_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%i_vec_2_addr = getelementptr i32 %i_vec_2, i64 0, i64 %zext_ln9" [kernel_matmul.cpp:12]   --->   Operation 29 'getelementptr' 'i_vec_2_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%i_vec_3_addr = getelementptr i32 %i_vec_3, i64 0, i64 %zext_ln9" [kernel_matmul.cpp:12]   --->   Operation 30 'getelementptr' 'i_vec_3_addr' <Predicate = (!icmp_ln9)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.70ns) (share mux size 8)   --->   "%muxLogicRAMAddr_to_i_vec_0_load = muxlogic i8 %i_vec_0_addr"   --->   Operation 31 'muxlogic' 'muxLogicRAMAddr_to_i_vec_0_load' <Predicate = (!icmp_ln9)> <Delay = 0.70>
ST_1 : Operation 32 [2/2] (0.71ns)   --->   "%i_vec_0_load = load i8 %i_vec_0_addr" [kernel_matmul.cpp:12]   --->   Operation 32 'load' 'i_vec_0_load' <Predicate = (!icmp_ln9)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 86 'RAM' <Latency = 1> <II = 1> <Delay = 0.89> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_1 : Operation 33 [1/1] (0.70ns) (share mux size 8)   --->   "%muxLogicRAMAddr_to_i_vec_1_load = muxlogic i8 %i_vec_1_addr"   --->   Operation 33 'muxlogic' 'muxLogicRAMAddr_to_i_vec_1_load' <Predicate = (!icmp_ln9)> <Delay = 0.70>
ST_1 : Operation 34 [2/2] (0.71ns)   --->   "%i_vec_1_load = load i8 %i_vec_1_addr" [kernel_matmul.cpp:12]   --->   Operation 34 'load' 'i_vec_1_load' <Predicate = (!icmp_ln9)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 86 'RAM' <Latency = 1> <II = 1> <Delay = 0.89> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_1 : Operation 35 [1/1] (0.70ns) (share mux size 8)   --->   "%muxLogicRAMAddr_to_i_vec_2_load = muxlogic i8 %i_vec_2_addr"   --->   Operation 35 'muxlogic' 'muxLogicRAMAddr_to_i_vec_2_load' <Predicate = (!icmp_ln9)> <Delay = 0.70>
ST_1 : Operation 36 [2/2] (0.71ns)   --->   "%i_vec_2_load = load i8 %i_vec_2_addr" [kernel_matmul.cpp:12]   --->   Operation 36 'load' 'i_vec_2_load' <Predicate = (!icmp_ln9)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 86 'RAM' <Latency = 1> <II = 1> <Delay = 0.89> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_1 : Operation 37 [1/1] (0.70ns) (share mux size 8)   --->   "%muxLogicRAMAddr_to_i_vec_3_load = muxlogic i8 %i_vec_3_addr"   --->   Operation 37 'muxlogic' 'muxLogicRAMAddr_to_i_vec_3_load' <Predicate = (!icmp_ln9)> <Delay = 0.70>
ST_1 : Operation 38 [2/2] (0.71ns)   --->   "%i_vec_3_load = load i8 %i_vec_3_addr" [kernel_matmul.cpp:12]   --->   Operation 38 'load' 'i_vec_3_load' <Predicate = (!icmp_ln9)> <Delay = 0.71> <CoreInst = "RAM">   --->   Core 86 'RAM' <Latency = 1> <II = 1> <Delay = 0.89> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_1 : Operation 39 [1/1] (0.39ns)   --->   "%store_ln9 = store i10 %add_ln9, i10 %i" [kernel_matmul.cpp:9]   --->   Operation 39 'store' 'store_ln9' <Predicate = (!icmp_ln9)> <Delay = 0.39>
ST_1 : Operation 52 [1/1] (0.28ns)   --->   "%ret_ln0 = ret"   --->   Operation 52 'ret' 'ret_ln0' <Predicate = (icmp_ln9)> <Delay = 0.28>

State 2 <SV = 1> <Delay = 2.66>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%specpipeline_ln10 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_48" [kernel_matmul.cpp:10]   --->   Operation 40 'specpipeline' 'specpipeline_ln10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%speclooptripcount_ln11 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 768, i64 768, i64 768" [kernel_matmul.cpp:11]   --->   Operation 41 'speclooptripcount' 'speclooptripcount_ln11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln9 = specloopname void @_ssdm_op_SpecLoopName, void @empty_36" [kernel_matmul.cpp:9]   --->   Operation 42 'specloopname' 'specloopname_ln9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/2] ( I:0.89ns O:0.89ns )   --->   "%i_vec_0_load = load i8 %i_vec_0_addr" [kernel_matmul.cpp:12]   --->   Operation 43 'load' 'i_vec_0_load' <Predicate = true> <Delay = 0.89> <CoreInst = "RAM">   --->   Core 86 'RAM' <Latency = 1> <II = 1> <Delay = 0.89> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_2 : Operation 44 [1/2] ( I:0.89ns O:0.89ns )   --->   "%i_vec_1_load = load i8 %i_vec_1_addr" [kernel_matmul.cpp:12]   --->   Operation 44 'load' 'i_vec_1_load' <Predicate = true> <Delay = 0.89> <CoreInst = "RAM">   --->   Core 86 'RAM' <Latency = 1> <II = 1> <Delay = 0.89> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_2 : Operation 45 [1/2] ( I:0.89ns O:0.89ns )   --->   "%i_vec_2_load = load i8 %i_vec_2_addr" [kernel_matmul.cpp:12]   --->   Operation 45 'load' 'i_vec_2_load' <Predicate = true> <Delay = 0.89> <CoreInst = "RAM">   --->   Core 86 'RAM' <Latency = 1> <II = 1> <Delay = 0.89> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_2 : Operation 46 [1/2] ( I:0.89ns O:0.89ns )   --->   "%i_vec_3_load = load i8 %i_vec_3_addr" [kernel_matmul.cpp:12]   --->   Operation 46 'load' 'i_vec_3_load' <Predicate = true> <Delay = 0.89> <CoreInst = "RAM">   --->   Core 86 'RAM' <Latency = 1> <II = 1> <Delay = 0.89> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 192> <RAM>
ST_2 : Operation 47 [1/1] (0.43ns)   --->   "%tmp_i = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.4float.float.i2, i2 0, i32 %i_vec_0_load, i2 1, i32 %i_vec_1_load, i2 2, i32 %i_vec_2_load, i2 3, i32 %i_vec_3_load, i32 <undef>, i2 %trunc_ln9" [kernel_matmul.cpp:12]   --->   Operation 47 'sparsemux' 'tmp_i' <Predicate = true> <Delay = 0.43> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 150 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.43> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 0> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%bitcast_ln12 = bitcast i32 %tmp_i" [kernel_matmul.cpp:12]   --->   Operation 48 'bitcast' 'bitcast_ln12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.34ns) (share mux size 3)   --->   "%muxLogicFIFOData_to_write_ln12 = muxlogic i32 %bitcast_ln12"   --->   Operation 49 'muxlogic' 'muxLogicFIFOData_to_write_ln12' <Predicate = true> <Delay = 0.34>
ST_2 : Operation 50 [1/1] ( I:0.98ns O:0.98ns ) (share mux size 3)   --->   "%write_ln12 = write void @_ssdm_op_Write.ap_fifo.volatile.i32P0A, i32 %vector_stream, i32 %bitcast_ln12" [kernel_matmul.cpp:12]   --->   Operation 50 'write' 'write_ln12' <Predicate = true> <Delay = 0.98> <CoreInst = "FIFO">   --->   Core 81 'FIFO' <Latency = 0> <II = 1> <Delay = 0.98> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 64> <FIFO>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%br_ln9 = br void %for.inc.i" [kernel_matmul.cpp:9]   --->   Operation 51 'br' 'br_ln9' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4.000ns, clock uncertainty: 1.080ns.

 <State 1>: 2.420ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln9', kernel_matmul.cpp:9) of constant 0 on local variable 'i', kernel_matmul.cpp:9 [19]  (0.393 ns)
	'load' operation 10 bit ('i', kernel_matmul.cpp:9) on local variable 'i', kernel_matmul.cpp:9 [22]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln9', kernel_matmul.cpp:9) [24]  (0.607 ns)
	'muxlogic' operation 32 bit ('muxLogicRAMAddr_to_i_vec_0_load') [37]  (0.705 ns)
	'load' operation 32 bit ('i_vec_0_load', kernel_matmul.cpp:12) on array 'i_vec_0' [38]  (0.715 ns)

 <State 2>: 2.665ns
The critical path consists of the following:
	'load' operation 32 bit ('i_vec_0_load', kernel_matmul.cpp:12) on array 'i_vec_0' [38]  (0.894 ns)
	'sparsemux' operation 32 bit ('tmp_i', kernel_matmul.cpp:12) [45]  (0.437 ns)
	'muxlogic' operation 0 bit ('muxLogicFIFOData_to_write_ln12') [47]  (0.347 ns)
	fifo write operation ('write_ln12', kernel_matmul.cpp:12) on port 'vector_stream' (kernel_matmul.cpp:12) [48]  (0.987 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
